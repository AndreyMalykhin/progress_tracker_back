ssl_certificate ${PT_LETSENCRYPT_CONFIG_DIR_PATH}/live/${PT_CERTIFICATE_NAME}/fullchain.pem;
ssl_certificate_key ${PT_LETSENCRYPT_CONFIG_DIR_PATH}/live/${PT_CERTIFICATE_NAME}/privkey.pem;

# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
#
server {
  listen [::]:80;
  listen 80;

  # listen on both hosts
  server_name ${PT_APP_SERVER_NAME} www.${PT_APP_SERVER_NAME};

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://${PT_APP_SERVER_NAME}$request_uri;
}

server {
  listen [::]:443 ssl http2;
  listen 443 ssl http2;

  # listen on the wrong host
  server_name www.${PT_APP_SERVER_NAME};

  include h5bp/directive-only/ssl.conf;

  # and redirect to the non-www host (declared below)
  return 301 https://${PT_APP_SERVER_NAME}$request_uri;
}

server {

  # listen [::]:443 ssl http2 accept_filter=dataready;  # for FreeBSD
  # listen 443 ssl http2 accept_filter=dataready;  # for FreeBSD
  # listen [::]:443 ssl http2 deferred;  # for Linux
  # listen 443 ssl http2 deferred;  # for Linux
  listen [::]:443 ssl http2;
  listen 443 ssl http2;

  # The host name to respond to
  server_name ${PT_APP_SERVER_NAME};

  include h5bp/directive-only/ssl.conf;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://app:${PT_APP_PORT};

    # Include the basic h5bp config set
    include h5bp/basic.conf;
  }

  #Specify a charset
  charset utf-8;

  # Custom 404 page
  # error_page 404 /404.html;
}
